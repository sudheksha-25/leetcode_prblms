Single Number:
Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.

Example 1:
Input: nums = [2,2,1]
Output: 1
Example 2:
Input: nums = [4,1,2,1,2]
Output: 4
Example 3:
Input: nums = [1]
Output: 1


CODE:

 class Solution {
    public int searchInsert(int[] nums, int target) {
        int first = 0;
        int last = nums.length - 1;

        while(first <= last){
            int mid = (first + last) / 2;

            if(target == nums[mid]){
                return mid;
            }
            if(target < nums[mid]){
                last = mid - 1;
            }
            else{
                first = mid + 1;
            }
        }
        return first;
    }
}
